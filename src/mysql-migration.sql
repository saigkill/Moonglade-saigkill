DELIMITER $$

CREATE PROCEDURE `MigrateDatabase`()
BEGIN
-- v14.1
IF NOT EXISTS (
    SELECT * FROM INFORMATION_SCHEMA.COLUMNS 
    WHERE TABLE_NAME = 'FriendLink' AND COLUMN_NAME = 'Rank'
) THEN
    ALTER TABLE FriendLink ADD COLUMN `Rank` INT DEFAULT 0;
    UPDATE FriendLink SET `Rank` = 0;
    ALTER TABLE FriendLink MODIFY COLUMN `Rank` INT NOT NULL;
END IF;

-- v14.3
IF NOT EXISTS (
    SELECT * FROM INFORMATION_SCHEMA.TABLES 
    WHERE TABLE_NAME = 'LoginHistory'
) THEN
    CREATE TABLE LoginHistory (
        `Id` INT AUTO_INCREMENT NOT NULL,
        `LoginTimeUtc` DATETIME NOT NULL,
        `LoginIp` NVARCHAR(64),
        `LoginUserAgent` NVARCHAR(128),
        `DeviceFingerprint` NVARCHAR(128),
        PRIMARY KEY (`Id`)
    );
END IF;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'LocalAccount') THEN
    DROP TABLE LocalAccount;
END IF;

IF EXISTS (
    SELECT * FROM INFORMATION_SCHEMA.COLUMNS 
    WHERE TABLE_NAME = 'Category' AND COLUMN_NAME = 'RouteName'
) THEN
    ALTER TABLE Category CHANGE `RouteName` `Slug` NVARCHAR(255);
END IF;

IF EXISTS (
    SELECT * FROM INFORMATION_SCHEMA.COLUMNS 
    WHERE TABLE_NAME = 'Post' AND COLUMN_NAME = 'InlineCss'
) THEN
    ALTER TABLE Post DROP COLUMN InlineCss;
END IF;

-- v14.5
IF EXISTS (
    SELECT * FROM INFORMATION_SCHEMA.COLUMNS 
    WHERE TABLE_NAME = 'Post' AND COLUMN_NAME = 'IsOriginal'
) THEN
    ALTER TABLE Post DROP COLUMN IsOriginal;
END IF;

IF EXISTS (
    SELECT * FROM INFORMATION_SCHEMA.COLUMNS 
    WHERE TABLE_NAME = 'Post' AND COLUMN_NAME = 'OriginLink'
) THEN
    ALTER TABLE Post DROP COLUMN OriginLink;
END IF;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Pingback') THEN
    RENAME TABLE Pingback TO Mention;
END IF;

IF NOT EXISTS (
    SELECT * FROM INFORMATION_SCHEMA.COLUMNS 
    WHERE TABLE_NAME = 'Mention' AND COLUMN_NAME = 'Worker'
) THEN
    ALTER TABLE Mention ADD COLUMN `Worker` NVARCHAR(16);
    UPDATE Mention SET `Worker` = 'Pingback';
END IF;

-- v14.8
IF NOT EXISTS (
    SELECT * FROM INFORMATION_SCHEMA.COLUMNS 
    WHERE TABLE_NAME = 'Post' AND COLUMN_NAME = 'RouteLink'
) THEN
    ALTER TABLE Post ADD COLUMN `RouteLink` NVARCHAR(256);
    UPDATE Post SET `RouteLink` = CONCAT(DATE_FORMAT(`PubDateUtc`, '%Y/%m/%d'), '/', `Slug`);
END IF;

IF EXISTS (
    SELECT * FROM INFORMATION_SCHEMA.COLUMNS 
    WHERE TABLE_NAME = 'Post' AND COLUMN_NAME = 'HashCheckSum'
) THEN
    ALTER TABLE Post DROP COLUMN HashCheckSum;
END IF;

-- v14.15
UPDATE BlogConfiguration SET CfgKey = 'AppearanceSettings' WHERE CfgKey = 'CustomStyleSheetSettings';

ALTER TABLE BlogConfiguration MODIFY COLUMN `CfgKey` VARCHAR(64) NOT NULL;

IF EXISTS (
    SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
    WHERE CONSTRAINT_TYPE = 'PRIMARY KEY' AND TABLE_NAME = 'BlogConfiguration'
) THEN
    ALTER TABLE BlogConfiguration DROP PRIMARY KEY;
END IF;

IF NOT EXISTS (
    SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
    WHERE CONSTRAINT_TYPE = 'PRIMARY KEY' AND TABLE_NAME = 'BlogConfiguration'
) THEN
    ALTER TABLE BlogConfiguration ADD PRIMARY KEY (`CfgKey`);
END IF;

IF EXISTS (
    SELECT * FROM INFORMATION_SCHEMA.COLUMNS 
    WHERE TABLE_NAME = 'BlogConfiguration' AND COLUMN_NAME = 'Id'
) THEN
    ALTER TABLE BlogConfiguration DROP COLUMN Id;
END IF;

-- v14.19
IF EXISTS (
    SELECT * FROM INFORMATION_SCHEMA.COLUMNS 
    WHERE TABLE_NAME = 'Post' AND COLUMN_NAME = 'Revision'
) THEN
    ALTER TABLE Post DROP COLUMN Revision;
END IF;

IF NOT EXISTS (
    SELECT * FROM INFORMATION_SCHEMA.TABLES 
    WHERE TABLE_NAME = 'PostView'
) THEN
    CREATE TABLE PostView (
        `PostId` CHAR(36) NOT NULL,
        `RequestCount` INT NOT NULL,
        `ViewCount` INT NOT NULL,
        `BeginTimeUtc` DATETIME NOT NULL,
        PRIMARY KEY (`PostId`)
    );
END IF;
END$$

DELIMITER ;